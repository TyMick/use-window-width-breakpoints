{"version":3,"file":"index.modern.js","sources":["../src/index.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport debounce from \"lodash.debounce\";\n\ninterface Breakpoints {\n  xs?: 0;\n  sm: number;\n  md?: number;\n  lg: number;\n  xl?: number;\n}\n\nconst bootstrapBreakpoints: Breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n};\n\ninterface BreakpointResults {\n  xs?: boolean;\n  sm: boolean;\n  md?: boolean;\n  lg: boolean;\n  xl?: boolean;\n  only: {\n    xs?: boolean;\n    sm: boolean;\n    md?: boolean;\n    lg: boolean;\n    xl?: boolean;\n  };\n  up: {\n    xs?: true;\n    sm: boolean;\n    md?: boolean;\n    lg: boolean;\n    xl?: boolean;\n  };\n  down: {\n    xs?: boolean;\n    sm: boolean;\n    md?: boolean;\n    lg: boolean;\n    xl?: true;\n  };\n  between: {\n    xs?: {\n      sm: boolean;\n      md?: boolean;\n      lg: boolean;\n      xl?: true;\n    };\n    sm: {\n      md?: boolean;\n      lg: boolean;\n      xl?: boolean;\n    };\n    md?: {\n      lg: boolean;\n      xl?: boolean;\n    };\n    lg?: {\n      xl: boolean;\n    };\n  };\n}\n\n/**\n * React hook for using window width breakpoints.\n * @param {Breakpoints} [breakpoints] - Set of window width breakpoints to be used\n * @param {0} [breakpoints.xs] - Lower bound of extra-small window widths, in pixels\n * @param {number} breakpoints.sm - Lower bound of small window widths, in pixels\n * @param {number} [breakpoints.md] - Lower bound of medium window widths, in pixels\n * @param {number} breakpoints.lg - Lower bound of large window widths, in pixels\n * @param {number} [breakpoints.xs] - Lower bound of extra-large window widths, in pixels\n * @returns {BreakpointResults} A full set of breakpoint queries and their boolean values\n */\nexport default function useWindowWidthBreakpoints(\n  breakpoints: Breakpoints = bootstrapBreakpoints\n): BreakpointResults {\n  // Validate breakpoint inputs\n  if (breakpoints.sm === undefined)\n    throw new TypeError(\"sm breakpoint is required.\");\n  if (breakpoints.lg === undefined)\n    throw new TypeError(\"lg breakpoint is required.\");\n\n  if (\n    (breakpoints.xs !== undefined && typeof breakpoints.xs !== \"number\") ||\n    typeof breakpoints.sm !== \"number\" ||\n    (breakpoints.md !== undefined && typeof breakpoints.md !== \"number\") ||\n    typeof breakpoints.lg !== \"number\" ||\n    (breakpoints.xl !== undefined && typeof breakpoints.xl !== \"number\")\n  )\n    throw new TypeError(\"Breakpoints must be numbers.\");\n\n  if (!(breakpoints.xs === 0))\n    if (breakpoints.sm !== 0)\n      throw new RangeError(\"Smallest breakpoint must be 0.\");\n\n  if (breakpoints.xs === 0 && breakpoints.sm <= breakpoints.xs)\n    throw new RangeError(\"sm breakpoint must be larger than xs breakpoint.\");\n  if (breakpoints.md !== undefined) {\n    if (breakpoints.md <= breakpoints.sm)\n      throw new RangeError(\"md breakpoint must be larger than sm breakpoint.\");\n    if (breakpoints.lg <= breakpoints.md)\n      throw new RangeError(\"lg breakpoint must be larger than md breakpoint.\");\n  } else if (breakpoints.lg <= breakpoints.sm) {\n    throw new RangeError(\"lg breakpoint must be larger than sm breakpoint.\");\n  }\n  if (breakpoints.xl !== undefined && breakpoints.xl <= breakpoints.lg)\n    throw new RangeError(\"xl breakpoint must be larger than lg breakpoint.\");\n\n  // Track window width\n  const [windowWidth, setWindowWidth] = useState(0);\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    handleResize();\n    window.addEventListener(\"resize\", debounce(handleResize, 400));\n    return () => {\n      window.removeEventListener(\"resize\", debounce(handleResize, 400));\n    };\n  }, []);\n\n  // Determine current breakpoint\n  let currentBreakpoint: \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\";\n  if (breakpoints.xl && windowWidth >= breakpoints.xl) {\n    currentBreakpoint = \"xl\";\n  } else if (windowWidth >= breakpoints.lg) {\n    currentBreakpoint = \"lg\";\n  } else if (breakpoints.md && windowWidth >= breakpoints.md) {\n    currentBreakpoint = \"md\";\n  } else if (windowWidth >= breakpoints.sm) {\n    currentBreakpoint = \"sm\";\n  } else {\n    currentBreakpoint = \"xs\";\n  }\n\n  // Return full set of breakpoint queries\n  return {\n    ...(breakpoints.xs === 0 && { xs: currentBreakpoint === \"xs\" }),\n    sm: currentBreakpoint === \"sm\",\n    ...(breakpoints.md && { md: currentBreakpoint === \"md\" }),\n    lg: currentBreakpoint === \"lg\",\n    ...(breakpoints.xl && { xl: currentBreakpoint === \"xl\" }),\n    only: {\n      ...(breakpoints.xs === 0 && { xs: currentBreakpoint === \"xs\" }),\n      sm: currentBreakpoint === \"sm\",\n      ...(breakpoints.md && { md: currentBreakpoint === \"md\" }),\n      lg: currentBreakpoint === \"lg\",\n      ...(breakpoints.xl && { xl: currentBreakpoint === \"xl\" }),\n    },\n    up: {\n      ...(breakpoints.xs === 0 && { xs: true }),\n      sm: [\"sm\", \"md\", \"lg\", \"xl\"].includes(currentBreakpoint),\n      ...(breakpoints.md && {\n        md: [\"md\", \"lg\", \"xl\"].includes(currentBreakpoint),\n      }),\n      lg: [\"lg\", \"xl\"].includes(currentBreakpoint),\n      ...(breakpoints.xl && { xl: [\"xl\"].includes(currentBreakpoint) }),\n    },\n    down: {\n      ...(breakpoints.xs === 0 && { xs: [\"xs\"].includes(currentBreakpoint) }),\n      sm: [\"xs\", \"sm\"].includes(currentBreakpoint),\n      ...(breakpoints.md && {\n        md: [\"xs\", \"sm\", \"md\"].includes(currentBreakpoint),\n      }),\n      lg: [\"xs\", \"sm\", \"md\", \"lg\"].includes(currentBreakpoint),\n      ...(breakpoints.xl && { xl: true }),\n    },\n    between: {\n      ...(breakpoints.xs === 0 && {\n        xs: {\n          sm: [\"xs\", \"sm\"].includes(currentBreakpoint),\n          ...(breakpoints.md && {\n            md: [\"xs\", \"sm\", \"md\"].includes(currentBreakpoint),\n          }),\n          lg: [\"xs\", \"sm\", \"md\", \"lg\"].includes(currentBreakpoint),\n          ...(breakpoints.xl && { xl: true }),\n        },\n      }),\n      sm: {\n        ...(breakpoints.md && { md: [\"sm\", \"md\"].includes(currentBreakpoint) }),\n        lg: [\"sm\", \"md\", \"lg\"].includes(currentBreakpoint),\n        ...(breakpoints.xl && {\n          xl: [\"sm\", \"md\", \"lg\", \"xl\"].includes(currentBreakpoint),\n        }),\n      },\n      ...(breakpoints.md && {\n        md: {\n          lg: [\"md\", \"lg\"].includes(currentBreakpoint),\n          ...(breakpoints.xl && {\n            xl: [\"md\", \"lg\", \"xl\"].includes(currentBreakpoint),\n          }),\n        },\n      }),\n      ...(breakpoints.xl && {\n        lg: {\n          xl: [\"lg\", \"xl\"].includes(currentBreakpoint),\n        },\n      }),\n    },\n  };\n}\n"],"names":["bootstrapBreakpoints","xs","sm","md","lg","xl","useWindowWidthBreakpoints","breakpoints","undefined","TypeError","RangeError","windowWidth","setWindowWidth","useState","currentBreakpoint","useEffect","handleResize","window","innerWidth","addEventListener","debounce","removeEventListener","only","up","includes","down","between"],"mappings":"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"}