import{useState as e,useEffect as s}from"react";import l from"lodash.debounce";function r(){return(r=Object.assign||function(e){for(var s=1;s<arguments.length;s++){var l=arguments[s];for(var r in l)Object.prototype.hasOwnProperty.call(l,r)&&(e[r]=l[r])}return e}).apply(this,arguments)}const m={xs:0,sm:576,md:768,lg:992,xl:1200};function n(n=m){if(void 0===n.sm)throw new TypeError("sm breakpoint is required.");if(void 0===n.lg)throw new TypeError("lg breakpoint is required.");if(void 0!==n.xs&&"number"!=typeof n.xs||"number"!=typeof n.sm||void 0!==n.md&&"number"!=typeof n.md||"number"!=typeof n.lg||void 0!==n.xl&&"number"!=typeof n.xl)throw new TypeError("Breakpoints must be numbers.");if(0!==n.xs&&0!==n.sm)throw new RangeError("Smallest breakpoint must be 0.");if(0===n.xs&&n.sm<=n.xs)throw new RangeError("sm breakpoint must be larger than xs breakpoint.");if(void 0!==n.md){if(n.md<=n.sm)throw new RangeError("md breakpoint must be larger than sm breakpoint.");if(n.lg<=n.md)throw new RangeError("lg breakpoint must be larger than md breakpoint.")}else if(n.lg<=n.sm)throw new RangeError("lg breakpoint must be larger than sm breakpoint.");if(void 0!==n.xl&&n.xl<=n.lg)throw new RangeError("xl breakpoint must be larger than lg breakpoint.");const[d,t]=e(0);let i;return s(()=>{const e=()=>{t(window.innerWidth)};return e(),window.addEventListener("resize",l(e,400)),()=>{window.removeEventListener("resize",l(e,400))}},[]),i=n.xl&&d>=n.xl?"xl":d>=n.lg?"lg":n.md&&d>=n.md?"md":d>=n.sm?"sm":"xs",r({},0===n.xs&&{xs:"xs"===i},{sm:"sm"===i},n.md&&{md:"md"===i},{lg:"lg"===i},n.xl&&{xl:"xl"===i},{only:r({},0===n.xs&&{xs:"xs"===i},{sm:"sm"===i},n.md&&{md:"md"===i},{lg:"lg"===i},n.xl&&{xl:"xl"===i}),up:r({},0===n.xs&&{xs:!0},{sm:["sm","md","lg","xl"].includes(i)},n.md&&{md:["md","lg","xl"].includes(i)},{lg:["lg","xl"].includes(i)},n.xl&&{xl:["xl"].includes(i)}),down:r({},0===n.xs&&{xs:["xs"].includes(i)},{sm:["xs","sm"].includes(i)},n.md&&{md:["xs","sm","md"].includes(i)},{lg:["xs","sm","md","lg"].includes(i)},n.xl&&{xl:!0}),between:r({},0===n.xs&&{xs:r({sm:["xs","sm"].includes(i)},n.md&&{md:["xs","sm","md"].includes(i)},{lg:["xs","sm","md","lg"].includes(i)},n.xl&&{xl:!0})},{sm:r({},n.md&&{md:["sm","md"].includes(i)},{lg:["sm","md","lg"].includes(i)},n.xl&&{xl:["sm","md","lg","xl"].includes(i)})},n.md&&{md:r({lg:["md","lg"].includes(i)},n.xl&&{xl:["md","lg","xl"].includes(i)})},n.xl&&{lg:{xl:["lg","xl"].includes(i)}})})}export default n;
//# sourceMappingURL=index.modern.js.map
